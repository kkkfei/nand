// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	
	// load==1  when (reset == 1) or (load == 1) or (load == 0 & inc == 1 & reset == 0)
	Or(a=reset, b=load, out=load1);
	Not(in=reset, out=nreset);
	Not(in=load, out=nload);
	And(a=nreset, b=nload, out=temp1);
	And(a=temp1, b=inc, out=load2);
	Or(a=load1, b=load2, out=load3);
	
	// load==1 then inc==0
	And(a=nload, b=inc, out=inc1);
	
	Inc16(in=out1, out=out2);
	Mux4Way16(a=in, b=out2, sel[0]=inc1, sel[1]=reset, out=out3);
	
	Register(in=out3, load=load3, out=out, out=out1);
}
